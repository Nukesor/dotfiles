# Path to your dotfiles relative to your $HOME directory
dotfiles_dir = ".dotfiles"

[settings]
# An array of toml files paths containing the variables to inject in your templatized dotfiles
# You can have multiple var files as long as variable names does not colide.
vars = ["vars/vars.toml"]
# An array of post install shell commands
posthooks = []

#----- Base setup for all machines -----
[settings.dots]

# Shell
zsh = { source = "base/zsh", target = ".config/zsh" }
sheldon = { source = "base/sheldon", target = ".config/sheldon" }
tmux = { source = "base/tmux", target = ".config/tmux" }
starship = { source = "base/starship.toml", target = ".config/starship.toml" }

# Tools
git = { source = "base/git", target = ".config/git" }
pueue_aliases = { source = "base/pueue", target = ".config/pueue" }
pacman = { source = "base/pacman", target = ".config/pacman" }
nvim = { source = "base/nvim", target = ".config/nvim" }
sqlite = { source = "base/sqlite", target = ".config/sqlite" }

# Language tooling
flake = { source = "base/flake8", target = ".config/flake8" }
npm = { source = "base/npm", target = ".config/npm" }
poetry = { source = "base/pypoetry", target = ".config/pypoetry" }
editorconfig = { source = "base/editorconfig", target = ".editorconfig" }

[profiles.pc]
prehooks = ["bash -c \"mkdir -p ~/.config/systemd/user/default.target.wants\""]
posthooks = [
  "systemctl --user daemon-reload",
  "systemctl --user enable --now pueued",
  "systemctl --user enable --now ssh-agent",
  "systemctl --user enable --now dotfile-deploy",
  #"systemctl --user enable --now polizei",
]

#----- Setup for pc machines -----
[profiles.pc.dots]
# Env
zshenv = { source = "pc/zshenv", target = ".zshenv" }

# System config
user-dirs = { source = "pc/user-dirs.dirs", target = ".config/user-dirs.dirs" }
pueued_service = { source = "pc/systemd_user/pueued.service", target = ".config/systemd/user/pueued.service" }
ssh_agent_service = { source = "pc/systemd_user/ssh-agent.service", target = ".config/systemd/user/ssh-agent.service" }
dotfile_service = { source = "pc/systemd_user/dotfile-deploy.service", target = ".config/systemd/user/dotfile-deploy.service" }
polizei = { source = "pc/systemd_user/polizei.service", target = ".config/systemd/user/polizei.service" }
syncthing = { source = "pc/systemd_user/syncthing.service.d", target = ".config/systemd/user/syncthing.service.d" }

# pc core
i3 = { source = "pc/i3", target = ".config/i3" }
i3status-rust = { source = "pc/i3status-rust", target = ".config/i3status-rust" }
x11 = { source = "pc/X11", target = ".config/X11" }
xprofile = { source = "pc/xprofile", target = ".xprofile" }
dunst = { source = "pc/dunstrc", target = ".config/dunstrc" }

# pc Apps
rofi = { source = "pc/rofi", target = ".config/rofi" }
rofi-pass = { source = "pc/rofi-pass", target = ".config/rofi-pass" }
alacritty = { source = "pc/alacritty", target = ".config/alacritty" }
termite = { source = "pc/termite/config", target = ".config/termite" }
mpv = { source = "pc/mpv", target = ".config/mpv" }
mpd = { source = "pc/mpd", target = ".config/mpd" }
ncmpcpp = { source = "pc/ncmpcpp", target = ".config/ncmpcpp" }
#discord = { source = "pc/discord", target = ".config/discord" }
firefox = { source = "pc/firefox/user.js", target = ".mozilla/user.js" }
picom = { source = "pc/picom", target = ".config/picom" }

# Cli Apps
game_saver = { source = "pc/game_saver.toml", target = ".config/game_saver.toml" }
atuin = { source = "pc/atuin/config.toml", target = ".config/atuin/config.toml" }

[profiles.laptop]
extra_profiles = ["pc"]
vars = ["vars/laptop-vars.toml"]
prehooks = ["bash -c \"mkdir -p ~/.config/systemd/user/default.target.wants\""]

[profiles.desktop]
extra_profiles = ["pc"]
vars = ["vars/desktop-vars.toml"]
posthooks = ["systemctl --user daemon-reload"]

[profiles.server]
vars = ["vars/server-vars.toml"]

[profiles.tv]
extra_profiles = ["pc"]
vars = ["vars/tv-vars.toml"]

[profiles.tv.dots]
Xresources = { source = "pc/Xresources", target = ".Xresources" }

#----- Setup for server machines -----
[profiles.server.dots]
# Dotfile auto-deploy on pull
# We only need this on the server, as we have the watcher job on PCs
post-merge-hook = { source = "base/git-hook", target = ".dotfiles/.git/hooks/post-merge" }
post-rewrite-hook = { source = "base/git-hook", target = ".dotfiles/.git/hooks/post-rewrite" }

zshenv = { source = "server/zshenv", target = ".zshenv" }
